#!/usr/bin/env ruby
# encoding: utf-8
# vim: ft=ruby

begin
  require 'event_girl_client'
rescue LoadError
  require 'rubygems'
  require 'event_girl_client'
end

require 'optparse'

Version = EventGirl::Client::VERSION.dup

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: event_girl [options] EVENTNAME OPTIONAL_DATA"

  opts.separator ""
  opts.separator "Options:"

  opts.on('-t', '--token TOKEN', 'Authentication token') do |token|
    options[:api_token] = token
  end
  opts.on('-s', '--site URL', 'URL of API endpoint') do |url|
    options[:url] = url
  end
  opts.on('--debug', 'Display full stack traces') do
    options[:debug] = true
  end
  opts.on_tail('--version', 'Display version and exit') do
    puts opts.ver
    puts
    puts "A Ruby client library to connect to the event_girl app,"
    puts "written by Susanne Dewein, Tam Eastley, Carsten Zimmermann"
    puts "as part of the ABSOLVENTA Rails Girls Summer of Code 2013."
    puts
    puts "Â© 2013 Absolventa GmbH"
    puts "This is free software; see the source for copying conditions."
    puts "There is NO warranty; not even for MERCHANTABILITY or FITNESS"
    puts "FOR A PARTICULAR PURPOSE. Licensed under the MIT license."
    exit
  end
  opts.on('-h', '--help', 'Display this help screen') do
    puts opts
    exit
  end
end

option_parser.parse!

if ARGV.empty?
  puts "E: Need to specify an event name to send"
  exit 1
end

begin
  client = EventGirl::Client.new(options[:url], options[:api_token])
  client.send_event(ARGV[0], ARGV[1])
rescue => e
  puts "E: #{e.message}"
  puts e.backtrace if options[:debug]
  exit 1
end
exit 0
